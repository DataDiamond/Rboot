library("dplyr")
library("pipe")
install.packages("pipe")
library("RMySQL")
conn <- dbConnect(RMySQL::MySQL(), "richardtwatson.com", dbname="ClassicModels", user="student", password="student")
dbGetQuery(conn,
"SELECT customerNumber AS 'Customer Number',
round(sum(amount),2) AS 'Total Payments',
round(sum(amount),2)/(SELECT sum(amount) From Payments) AS 'Pct of Total'
FROM Payments
GROUP BY customerNumber;")
dbGetQuery(conn,
"SELECT customerNumber AS 'Customer Number',
round(sum(amount),2) AS 'Payments',
round(sum(amount),2)/(SELECT sum(amount) From Payments) AS 'Pct of Total'
FROM Payments
GROUP BY customerNumber;")
library("readr")
dbGetQuery(conn,
"SELECT customerName, amount
FROM Payments
JOIN Customers using customerNumber
GROUP BY customerNumber;")
dbGetQuery(conn,
"SELECT * FROM Payments
JOIN Customers using customerNumber;")
dbGetQuery(conn,
"SELECT * FROM Payments JOIN Customers using customerNumber;")
dbGetQuery(conn,
"SELECT * FROM Payments;")
dbGetQuery(conn, "SELECT customerNumber, sum(amount) FROM Payments GROUP BY CustomerNumber;")
dbGetQuery(conn, "SELECT customerNumber, sum(amount) AS Payment FROM Payments GROUP BY CustomerNumber;")
dbGetQuery(conn, "SELECT * FROM Payments GROUP BY CustomerNumber;")
dbGetQuery(conn, "SELECT * FROM Payments;")
dbGetQuery(conn, "SELECT customerNumber, amount FROM Payments;")
payments <- dbGetQuery(conn, "SELECT customerNumber, amount FROM Payments;")
payments <- dbGetQuery(conn, "SELECT customerNumber, amount FROM Payments;")
head(payments)
#Group payments by CustomerNumber
payments %>%
group_by(customerNumber) %>%
summarise(sum(amount))
#Group payments by CustomerNumber
g.payments<- payments %>%
group_by(customerNumber) %>%
summarise(sum(amount))
head(g.payments)
colnames(g.payments)<- c("Customer","Total")
head(g.payments)
sum(g.payments$Total)
g.payments$PerctTotal<-g.payments$Total/sum(g.payments$Total)
head(g.payments)
arrange(g.payments,desc(PerctTotal))
head(g.payments)
arrange(g.payments,desc(PerctTotal))
head(g.payments)
g.payments<-arrange(g.payments,desc(PerctTotal))
head(g.payments)
count(g.payments$Customer)
count_(g.payments$Customer)
inner_join(g.payments$Customer, Customers)
inner_join(g.payments$Customer, Customers$customerName)
count_(g.payments$Customer)
row_number(g.payments)
row_number(g.payments$PerctTotal)
#show row number
g.payments$RowNum <- row_number(g.payments$PerctTotal)
head(g.payments$RowNum)
head(g.payments)
#show row number
g.payments$RowNum <- nrow(g.payments$PerctTotal)
head(g.payments)
#show row number
g.payments$RowNum <- nrow(g.payments$PerctTotal)
head(g.payments)
#show row number
nrow(g.payments$PerctTotal)
#show row number
nrow(g.payments)
#show row number
g.payments
#show row number
g.payments
nrow(g.payments)
99/98
98/99
99/99
#show row number
row_number
g.payments
#show row number
row_number(g.payments)
#show row number
row_number(g.payments$customerNumber)
#show row number
row_number(g.payments$Customer)
tibble(g.payments)
ABC<- g.payments
#show row number
row_number(ABC$Customer)
tibble(ABC)
dbReadTable(conn, "Customers")
dbReadTable(conn,"Payments")
dbReadTable(conn,"Customers")
dbReadTable(conn,"Customers")
dbReadTable(conn,"Payments")
