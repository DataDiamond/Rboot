server <- function(input, output){}
shinyApp(ui, server)
#Basic Dashboard Layout
menuRev <-  menuItem("Revenue", tabName = "Revenue", icon = icon("dashboard"))
menuOrd <- menuItem("Orders", tabName = "Orders", icon = icon("dashboard"))
ui <- dashboardPage(header,sidebar,body)
#Run dashboard
server <- function(input, output){}
shinyApp(ui, server)
#Basic Dashboard Layout
menuRev <-  menuItem("Revenue", tabName = "Revenue", icon = icon("dashboard"))
menuOrd <- menuItem("Orders", tabName = "Orders", icon = icon("dashboard"))
sidebar <- dashboardSidebar(sidebarMenu(menuApple, menuGoogle))
boxLatest <- box(title = 'Latest price: ',getQuote('AAPL')$Last, background = 'blue' )
boxChange <-  box(title = 'Change ',getQuote('AAPL')$Change, background = 'red' )
row1 <- fluidRow(boxLatest,boxChange)
menuOrd <- menuItem("Orders", tabName = "Orders", icon = icon("dashboard"))
#Basic Dashboard Layout
menuRev <-  menuItem("Revenue", tabName = "Revenue", icon = icon("dashboard"))
menuOrd <- menuItem("Orders", tabName = "Orders", icon = icon("dashboard"))
sidebar <- dashboardSidebar(sidebarMenu(menuRev, menuOrd))
boxLatest <- box(title = 'Latest price: ',getQuote('AAPL')$Last, background = 'blue' )
boxChange <-  box(title = 'Change ',getQuote('AAPL')$Change, background = 'red' )
row1 <- fluidRow(boxLatest,boxChange)
boxOld <- box(title='Oldest Price: ',getQuote('AAPL')$First, background='olive')
boxReallyOld <-box(title='Really Oldest Price', getQuote('AAPL')$First, footer='this stat sucks', background='light-blue')
row2 <- fluidRow(boxOld,boxReallyOld)
tabRev <-  tabItem(tabName = "Apple", getQuote('AAPL')$Last)
tabOrd <-  tabItem(tabName = "Google", getQuote('GOOG')$Last)
tabs <-  tabItems(tabRev,tabOrd)
body <- dashboardBody(tabs, row1, row2)
ui <- dashboardPage(header,sidebar,body)
#Run dashboard
server <- function(input, output){}
shinyApp(ui, server)
###Libraries
library(RMySQL)
library(shiny)
library(shinydashboard)
library(quantmod) # Provides current stock prices
library(dygraphs)
library(instalr)
#Import Classic Models Database
conn <- dbConnect(RMySQL::MySQL(), "richardtwatson.com", dbname="ClassicModels", user="student", password="student")
#Get payments table
rev <- dbGetQuery(conn, "SELECT * FROM Payments WHERE paymentDate >= '4/1/2005 ;")
#Get payments table
rev <- dbGetQuery(conn, "SELECT * FROM Payments ;")
head(rev)
#Get payments table
rev <- dbGetQuery(conn, "SELECT * FROM Payments WHERE paymentDate >= '2005-04-01' ;")
head(rev)
#Get
ord <- dbGetQuery(conn, "SELECT * FROM Orders;")
head(ord)
#Get payments table
rev <- dbGetQuery(conn, "SELECT * FROM Payments WHERE paymentDate between '2005-04-01' and '2005-04-31'  ;")
head(rev)
#Get
ord <- dbGetQuery(conn, "SELECT * FROM Orders;")
head(ord)
#Get
ord <- dbGetQuery(conn, "SELECT * FROM Orders WHERE shippedDate between '2005-04-01' and '2005-04-31' ;")
head(ord)
boxLatest <- box(title = 'Latest price: ',rev$Last, background = 'blue' )
box(title = "Controls", sliderInput("slider", "Months:", 1, 12, 4)
boxMonth<- box(title = "Controls", sliderInput("slider", "Months:", 1, 12, 4)
boxMonth <- box(title = "Controls", sliderInput("slider", "Months:", 1, 12, 4))
row1 <- fluidRow(boxLatest,boxMonth)
menuRev <-  menuItem("Revenue", tabName = "Revenue", icon = icon("dashboard"))
menuOrd <- menuItem("Orders", tabName = "Orders", icon = icon("dashboard"))
sidebar <- dashboardSidebar(sidebarMenu(menuRev, menuOrd))
boxMonth <- box(title = "Controls", sliderInput("slider", "Months:", 1, 12, 4))
boxLatest <- box(title = 'Latest price: ',rev$Last, background = 'blue' )
boxChange <-  box(title = 'Change ',getQuote('AAPL')$Change, background = 'red' )
row1 <- fluidRow(boxLatest,boxMonth)
boxOld <- box(title='Oldest Price: ',getQuote('AAPL')$First, background='olive')
boxReallyOld <-box(title='Really Oldest Price', getQuote('AAPL')$First, footer='this stat sucks', background='light-blue')
row2 <- fluidRow(boxOld,boxReallyOld)
tabRev <-  tabItem(tabName = "Revenue", getQuote('AAPL')$Last)
tabOrd <-  tabItem(tabName = "Orders", getQuote('GOOG')$Last)
tabs <-  tabItems(tabRev,tabOrd)
body <- dashboardBody(tabs, row1, row2)
ui <- dashboardPage(header,sidebar,body)
#Run dashboard
server <- function(input, output){}
shinyApp(ui, server)
shinyApp(ui, server)
ui <- dashboardPage(header,sidebar,body)
#Basic Dashboard Layout'
header <- dashboardHeader(title = 'Orders and Revenue')
sidebar <- dashboardSidebar()
body <- dashboardBody()
ui <-dashboardPage(header,sidebar,body)
#Run dashboard
server <- function(input, output){}
shinyApp(ui, server)
header <- dashboardHeader(title = 'Orders and Revenue')
sidebar <- dashboardSidebar()
body <- dashboardBody()
ui <-dashboardPage(header,sidebar,body)
menuRev <-  menuItem("Revenue", tabName = "Revenue", icon = icon("dashboard"))
menuOrd <- menuItem("Orders", tabName = "Orders", icon = icon("dashboard"))
sidebar <- dashboardSidebar(sidebarMenu(menuRev, menuOrd))
boxMonth <- box(title = "Controls", sliderInput("slider", "Months:", 1, 12, 4))
boxLatest <- box(title = 'Latest price: ',rev$Last, background = 'blue' )
boxChange <-  box(title = 'Change ',getQuote('AAPL')$Change, background = 'red' )
row1 <- fluidRow(boxLatest,boxMonth)
boxOld <- box(title='Oldest Price: ',getQuote('AAPL')$First, background='olive')
boxReallyOld <-box(title='Really Oldest Price', getQuote('AAPL')$First, footer='this stat sucks', background='light-blue')
row2 <- fluidRow(boxOld,boxReallyOld)
tabRev <-  tabItem(tabName = "Revenue", getQuote('AAPL')$Last)
tabOrd <-  tabItem(tabName = "Orders", getQuote('GOOG')$Last)
tabs <-  tabItems(tabRev,tabOrd)
body <- dashboardBody(tabs, row1, row2)
ui <- dashboardPage(header,sidebar,body)
#Run dashboard
server <- function(input, output){}
shinyApp(ui, server)
#Run dashboard
server <- function(input, output){}
shinyApp(ui, server)
min(rev$paymentDate)
year(min(rev$paymentDate))
yearlyReturn(min(rev$paymentDate))
substring(min(rev$paymentDate),1,4)
boxMonth <- box(title = "Controls", sliderInput("slider", "Months:", 1, 12, 4), sliderInput("slider", "Year:",substring(min(rev$paymentDate),1,4),substring(max(rev$paymentDate),1,4), '2005'))
boxMonth <- box(title = "Controls", sliderInput("slider", "Months:", 1, 12, 4), sliderInput("slider", "Year:",as.numeric(substring(min(rev$paymentDate),1,4)),as.numeric(substring(max(rev$paymentDate),1,4)), 2005))
#Run dashboard
server <- function(input, output){}
shinyApp(ui, server)
shinyApp(ui, server)
shinyApp(ui, server)
menuRev <-  menuItem("Revenue", tabName = "Revenue", icon = icon("dashboard"))
menuOrd <- menuItem("Orders", tabName = "Orders", icon = icon("dashboard"))
sidebar <- dashboardSidebar(sidebarMenu(menuRev, menuOrd))
boxControl <- box(title = "Controls", sliderInput("slider", "Months:", 1, 12, 4), sliderInput("slider", "Year:",as.numeric(substring(min(rev$paymentDate),1,4)),as.numeric(substring(max(rev$paymentDate),1,4)), 2005))
boxLatest <- box(title = 'Latest price: ',rev$Last, background = 'blue' )
boxChange <-  box(title = 'Change ',getQuote('AAPL')$Change, background = 'red' )
row1 <- fluidRow(boxLatest,boxChange)
boxOld <- box(title='Oldest Price: ',getQuote('AAPL')$First, background='olive')
boxReallyOld <-box(title='Really Oldest Price', getQuote('AAPL')$First, footer='this stat sucks', background='light-blue')
row2 <- fluidRow(boxOld,boxReallyOld)
tabRev <-  tabItem(tabName = "Revenue", getQuote('AAPL')$Last)
tabOrd <-  tabItem(tabName = "Orders", getQuote('GOOG')$Last)
tabs <-  tabItems(tabRev,tabOrd)
body <- dashboardBody(tabs, row1, row2)
ui <- dashboardPage(header,sidebar,body)
#Run dashboard
server <- function(input, output){}
shinyApp(ui, server)
source('C:/Users/bbens/OneDrive - University of Georgia/Spring/Advanced Data Analytics/Assignments/Dashboards - A14/A14.R')
body <- dashboardBody()
###Dashboards
#Bryana Benson
#Conner Bryan
###Libraries
library(RMySQL)
library(shiny)
library(shinydashboard)
library(quantmod) # Provides current stock prices
library(dygraphs)
library(instalr)
###Build a dashboard to report revenue and orders for ClassicModels for a given year and month.
#Import Classic Models Database
conn <- dbConnect(RMySQL::MySQL(), "richardtwatson.com", dbname="ClassicModels", user="student", password="student")
#Get payments table
rev <- dbGetQuery(conn, "SELECT * FROM Payments WHERE paymentDate between '2005-04-01' and '2005-04-31'  ;")
head(rev)
#Get
ord <- dbGetQuery(conn, "SELECT * FROM Orders WHERE shippedDate between '2005-04-01' and '2005-04-31' ;")
head(ord)
#Basic Dashboard Layout'
header <- dashboardHeader(title = 'Orders and Revenue')
sidebar <- dashboardSidebar()
body <- dashboardBody()
ui <-dashboardPage(header,sidebar,body)
menuRev <-  menuItem("Revenue", tabName = "Revenue", icon = icon("dashboard"))
menuOrd <- menuItem("Orders", tabName = "Orders", icon = icon("dashboard"))
sidebar <- dashboardSidebar(sidebarMenu(menuRev, menuOrd))
boxControl <- box(title = "Controls", sliderInput("slider", "Months:", 1, 12, 4), sliderInput("slider", "Year:",as.numeric(substring(min(rev$paymentDate),1,4)),as.numeric(substring(max(rev$paymentDate),1,4)), 2005))
boxLatest <- box(title = 'Latest price: ',rev$Last, background = 'blue' )
boxChange <-  box(title = 'Change ',getQuote('AAPL')$Change, background = 'red' )
row1 <- fluidRow(boxLatest,boxChange)
boxOld <- box(title='Oldest Price: ',getQuote('AAPL')$First, background='olive')
boxReallyOld <-box(title='Really Oldest Price', getQuote('AAPL')$First, footer='this stat sucks', background='light-blue')
row2 <- fluidRow(boxOld,boxReallyOld)
tabRev <-  tabItem(tabName = "Revenue", getQuote('AAPL')$Last)
tabOrd <-  tabItem(tabName = "Orders", getQuote('GOOG')$Last)
tabs <-  tabItems(tabRev,tabOrd)
body <- dashboardBody(tabs, row1, row2)
ui <- dashboardPage(header,sidebar,body)
#Run dashboard
server <- function(input, output){}
shinyApp(ui, server)
#Get payments table
rev <- dbGetQuery(conn, "SELECT * FROM Payments;")
#Get payments table
rev <- dbGetQuery(conn, "SELECT * FROM Payments;")
###Dashboards
#Bryana Benson
#Conner Bryan
###Libraries
library(RMySQL)
library(shiny)
library(shinydashboard)
library(quantmod) # Provides cu
library(dygraphs)
library(instalr)
#Import Classic Models Database
conn <- dbConnect(RMySQL::MySQL(), "richardtwatson.com", dbname="ClassicModels", user="student", password="student")
#Get payments table
rev <- dbGetQuery(conn, "SELECT * FROM Payments;")
head(rev)
#Get
ord <- dbGetQuery(conn, "SELECT * FROM Orders;")
head(ord)
#Basic Dashboard Layout'
header <- dashboardHeader(title = 'Orders and Revenue')
sidebar <- dashboardSidebar()
body <- dashboardBody()
ui <-dashboardPage(header,sidebar,body)
menuRev <-  menuItem("Revenue", tabName = "Revenue", icon = icon("dashboard"))
menuOrd <- menuItem("Orders", tabName = "Orders", icon = icon("dashboard"))
##Dashboards
#Bryana Benson
#Conner Bryan
###Libraries
library(RMySQL)
library(shiny)
library(shinydashboard)
library(quantmod) # Provides current stock prices
library(dygraphs)
library(instalr)
###Build a dashboard to report revenue and orders for ClassicModels for a given year and month.
#Import Classic Models Database
conn <- dbConnect(RMySQL::MySQL(), "richardtwatson.com", dbname="ClassicModels", user="student", password="student")
#Get payments table
rev <- dbGetQuery(conn, "SELECT * FROM Payments;")
head(rev)
#Get
ord <- dbGetQuery(conn, "SELECT * FROM Orders;")
head(ord)
#Basic Dashboard Layout'
header <- dashboardHeader(title = 'Orders and Revenue')
sidebar <- dashboardSidebar()
body <- dashboardBody()
ui <-dashboardPage(header,sidebar,body)
min(ord$orderDate)
max(ord$orderDate)
ui <- fluidPage(
dateRangeInput("daterange1", "Date range:",
start = "2003-01-06",
end   = "2005-05-31"),
# Default start and end is the current date in the client's time zone
dateRangeInput("daterange2", "Date range:"),
# start and end are always specified in yyyy-mm-dd, even if the display
# format is different
dateRangeInput("daterange3", "Date range:",
start  = "2001-01-01",
end    = "2010-12-31",
min    = "2001-01-01",
max    = "2012-12-21",
format = "mm/dd/yy",
separator = " - "),
# Pass in Date objects
dateRangeInput("daterange4", "Date range:",
start = Sys.Date()-10,
end = Sys.Date()+10),
# Use different language and different first day of week
dateRangeInput("daterange5", "Date range:",
language = "de",
weekstart = 1),
# Start with decade view instead of default month view
dateRangeInput("daterange6", "Date range:",
startview = "decade")
)
shinyApp(ui, server = function(input, output) { })
ui <- fluidPage(
dateRangeInput("daterange1", "Date range:",
start = "2003-01-06",
end   = "2005-05-31"),
# Default start and end is the current date in the client's time zone
dateRangeInput("daterange2", "Date range:"),
# start and end are always specified in yyyy-mm-dd, even if the display
# format is different
dateRangeInput("daterange3", "Date range:",
start  = "2001-01-01",
end    = "2010-12-31",
min    = "2001-01-01",
max    = "2012-12-21",
format = "mm/dd/yy",
separator = " - "),
# Pass in Date objects
dateRangeInput("daterange4", "Date range:",
start = Sys.Date()-10,
end = Sys.Date()+10),
# Use different language and different first day of week
dateRangeInput("daterange5", "Date range:",
language = "de",
weekstart = 1),
# Start with decade view instead of default month view
dateRangeInput("daterange6", "Date range:",
startview = "decade")
)
shinyApp(ui, server = function(input, output) { })
ui <- fluidPage(
dateRangeInput("daterange1", "Date range:",
start = "2003-01-06",
end   = "2005-05-31"),
# Default start and end is the current date in the client's time zone
dateRangeInput("daterange2", "Date range:"),
# start and end are always specified in yyyy-mm-dd, even if the display
# format is different
dateRangeInput("daterange3", "Date range:",
start  = "2001-01-01",
end    = "2010-12-31",
min    = "2001-01-01",
max    = "2012-12-21",
format = "mm/dd/yy",
separator = " - ")
)
shinyApp(ui, server = function(input, output) { })
shinyApp(ui, server = function(input, output) { })
###Dashboards
#Bryana Benson
#Conner Bryan
###Libraries
library(RMySQL)
library(shiny)
library(shinydashboard)
library(quantmod) # Provides current stock prices
library(dygraphs)
library(instalr)
###Build a dashboard to report revenue and orders for ClassicModels for a given year and month.
#Import Classic Models Database
conn <- dbConnect(RMySQL::MySQL(), "richardtwatson.com", dbname="ClassicModels", user="student", password="student")
#Get payments table
rev <- dbGetQuery(conn, "SELECT * FROM Payments;")
head(rev)
#Get
ord <- dbGetQuery(conn, "SELECT * FROM Orders;")
head(ord)
#Basic Dashboard Layout'
header <- dashboardHeader(title = 'Orders and Revenue')
sidebar <- dashboardSidebar()
body <- dashboardBody()
ui <-dashboardPage(header,sidebar,body)
#menuRev <-  menuItem("Revenue", tabName = "Revenue", icon = icon("dashboard"))
#menuOrd <- menuItem("Orders", tabName = "Orders", icon = icon("dashboard"))
#sidebar <- dashboardSidebar(sidebarMenu(menuRev, menuOrd))
ui <- fluidPage(
dateRangeInput("daterange1", "Date range:",
start = "2003-01-06",
end   = "2005-05-31")
)
shinyApp(ui, server = function(input, output) { })
shinyApp(ui, server)
#Run dashboard
server <- function(input, output){}
shinyApp(ui, server)
###Dashboards
#Bryana Benson
#Conner Bryan
###Libraries
library(RMySQL)
library(shiny)
library(shinydashboard)
library(quantmod) # Provides current stock prices
library(dygraphs)
library(instalr)
###Build a dashboard to report revenue and orders for ClassicModels for a given year and month.
#Import Classic Models Database
conn <- dbConnect(RMySQL::MySQL(), "richardtwatson.com", dbname="ClassicModels", user="student", password="student")
#Get payments table
rev <- dbGetQuery(conn, "SELECT * FROM Payments;")
head(rev)
#Get
ord <- dbGetQuery(conn, "SELECT * FROM Orders;")
head(ord)
#Basic Dashboard Layout'
header <- dashboardHeader(title = 'Orders and Revenue')
sidebar <- dashboardSidebar()
body <- dashboardBody()
ui <-dashboardPage(header,sidebar,body)
#menuRev <-  menuItem("Revenue", tabName = "Revenue", icon = icon("dashboard"))
#menuOrd <- menuItem("Orders",
boxControl <- box(title = "Controls",  dateRangeInput("daterange1", "Date range:",
start = "2003-01-06",
end   = "2005-05-31"))
boxLatest <- box(title = 'Latest price: ',rev$Last, background = 'blue' )
boxChange <-  box(title = 'Change ',getQuote('AAPL')$Change, background = 'red' )
row1 <- fluidRow(boxLatest,boxChange)
boxOld <- box(title='Oldest Price: ',getQuote('AAPL')$First, background='olive')
boxReallyOld <-box(title='Really Oldest Price', getQuote('AAPL')$First, footer='this stat sucks', background='light-blue')
row2 <- fluidRow(boxOld,boxReallyOld)
tabRev <-  tabItem(tabName = "Revenue", getQuote('AAPL')$Last)
tabOrd <-  tabItem(tabName = "Orders", getQuote('GOOG')$Last)
tabs <-  tabItems(tabRev,tabOrd)
body <- dashboardBody(tabs, row1, row2)
ui <- dashboardPage(header,sidebar,body)
#Run dashboard
server <- function(input, output){}
shinyApp(ui, server)
library(RMySQL)
library(shiny)
library(shinydashboard)
library(dygraphs)
library(instalr)
###Dashobard Header
header <- dashboardHeader(title = 'Classic Models Revenue and Orders Dashboard')
###Dashobard Sidebar
sidebar <- dashboardSidebar()
###Month Dropdown
boxMonth <- box(selectInput("Month", label = "Month",choices = c("January" = 01,"February" = 02, "March" = 03, "April" = 04, "May" =
05,"June" = 06, "July" = 07, "August" = 08, "September" = 09,"October" = 10,"November" = 11, "December" = 12), selected = 04))
###Year Dropdown
boxYear <- box(selectInput("Year", lebel = "Year", choices = c(2003, 2004, 2005), selected = 2005))
###Year Dropdown
boxYear <- box(selectInput("Year", label = "Year", choices = c(2003, 2004, 2005), selected = 2005))
#Shiny Dashboard
##Authors:
###Bryana Benson
###Conner Bryan
###Libraries
library(RMySQL)
library(shiny)
library(shinydashboard)
library(dygraphs)
library(instalr)
###Dashobard Header
header <- dashboardHeader(title = 'Classic Models Revenue and Orders Dashboard')
###Dashobard Sidebar
sidebar <- dashboardSidebar()
###Month Dropdown
boxMonth <- box(selectInput("Month", label = "Month",choices = c("January" = 01,"February" = 02, "March" = 03, "April" = 04, "May" =
05,"June" = 06, "July" = 07, "August" = 08, "September" = 09,"October" = 10,"November" = 11, "December" = 12), selected = 04))
###Year Dropdown
boxYear <- box(selectInput("Year", label = "Year", choices = c(2003, 2004, 2005), selected = 2005))
###Row for Year and Month Dropdowns
row1 <- fluidRow(width=5,boxYear, boxMonth)
###Revenue Box
boxRev <- box(title = "Revenue", width = 6, background = "green", textOutput("Revenue"))
###Orders Box
boxOrd <- box(title = "Orders", width = 6, background = "blue", textOutput("Orders"))
###Row for Revenue and Orders Boxes
row2 <- fluidRow(width=5,boxRev, boxOrd)
###Combine Rows into Body
body <- dashboardBody(row1, row2)
###Combine dashboard components
ui <- dashboardPage(header,sidebar,body)
###Create Server
server <- function(input, output)
{
conn <- dbConnect(RMySQL::MySQL(), "richardtwatson.com", dbname="ClassicModels", user="student", password="student")
#creating output values
output$Rev <- renderText({
sql1 <- paste0('SELECT FORMAT(SUM(quantityOrdered*priceEach),2)
FROM Orders JOIN OrderDetails ON Orders.orderNumber = OrderDetails.orderNumber
WHERE YEAR(orderDate) = ',input$Year,' AND MONTH(orderDate)=', input$Month)
query1 <- dbGetQuery(conn, sql1)[1,1]
})
output$Ord <- renderText({
sql2 <- paste0('SELECT COUNT(Orders.orderNumber)
FROM Orders JOIN OrderDetails ON Orders.orderNumber = OrderDetails.orderNumber
WHERE YEAR(orderDate) = ',input$Year,' AND MONTH(orderDate)=', input$Month)
query2 <- dbGetQuery(conn, sql2)[1,1]
})
}
shinyApp(ui, server)
conn <- dbConnect(RMySQL::MySQL(), "richardtwatson.com", dbname="ClassicModels", user="student", password="student")
#creating output values
output$Rev <- renderText({
sql1 <- paste0('SELECT FORMAT(SUM(quantityOrdered*priceEach),2)
FROM Orders JOIN OrderDetails ON Orders.orderNumber = OrderDetails.orderNumber
WHERE YEAR(orderDate) = ',input$Year,' AND MONTH(orderDate)=', input$Month)
query1 <- dbGetQuery(conn, sql1)[1,1]
})
output$Ord <- renderText({
sql2 <- paste0('SELECT COUNT(Orders.orderNumber)
FROM Orders JOIN OrderDetails ON Orders.orderNumber = OrderDetails.orderNumber
WHERE YEAR(orderDate) = ',input$Year,' AND MONTH(orderDate)=', input$Month)
query2 <- dbGetQuery(conn, sql2)[1,1]
})
###Create Server
server <- function(input, output)
{
conn <- dbConnect(RMySQL::MySQL(), "richardtwatson.com", dbname="ClassicModels", user="student", password="student")
#creating output values
output$Rev <- renderText({
sql1 <- paste0('SELECT FORMAT(SUM(quantityOrdered*priceEach),2)
FROM Orders JOIN OrderDetails ON Orders.orderNumber = OrderDetails.orderNumber
WHERE YEAR(orderDate) = ',input$Year,' AND MONTH(orderDate)=', input$Month)
query1 <- dbGetQuery(conn, sql1)[1,1]
})
output$Ord <- renderText({
sql2 <- paste0('SELECT COUNT(Orders.orderNumber)
FROM Orders JOIN OrderDetails ON Orders.orderNumber = OrderDetails.orderNumber
WHERE YEAR(orderDate) = ',input$Year,' AND MONTH(orderDate)=', input$Month)
query2 <- dbGetQuery(conn, sql2)[1,1]
})
}
shinyApp(ui, server)
source('~/GitHub/Rboot/A14 - Dashboards/A14.R')
runApp('A14.R')
library(instalr)
library(installr)
install.packages(instalr)
install.packages("instalr")
source('~/GitHub/Rboot/A14 - Dashboards/A14.R')
runApp('A14.R')
source('~/GitHub/Rboot/A14 - Dashboards/A14.R')
