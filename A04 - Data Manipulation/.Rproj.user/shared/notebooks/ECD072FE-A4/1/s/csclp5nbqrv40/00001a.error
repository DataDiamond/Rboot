{"frames":[{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"tibble(ABC)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"as_tibble(lst_quos(xs, expand = TRUE))","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"as_tibble.list(lst_quos(xs, expand = TRUE))","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"list_to_tibble(x, validate)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"check_tibble(x)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"invalid_df(\"must be [a] 1d atomic vector(s) or [a] list(s)\", \n    x, !is_1d)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"stopc(pluralise_msg(\"Column(s) \", vars), \" \", pluralise(problem, \n    vars))","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"abort(paste0(...))","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"stop(cnd)","line_number":0}],"message":"Error: Column `ABC` must be a 1d atomic vector or a list\n[90mCall `rlang::last_error()` to see a backtrace[39m\n"}