library("DBI")
library("RMySQL")
conn <- dbConnect(RMySQL::MySQL(), "richardtwatson.com", dbname="ClassicModels", user="student", password="student")
conn <- dbConnect(RMySQL::MySQL(), "richardtwatson.com", dbname="ClassicModels", user="student", password="student")
```{r}
c <- dbGetQuery(conn,"SELECT (SELECT productName FROM Products WHERE Products.productCode = OD1.productCode) AS   `Product 1`,
(SELECT productName FROM Products WHERE Products.productCode = OD2.productCode) AS `Product 2`,
count(*) as Frequency
FROM OrderDetails AS OD1 JOIN OrderDetails AS OD2 ON OD1.orderNumber = OD2.orderNumber
WHERE OD1.productCode > OD2.productCode
GROUP BY `Product 1`, `Product 2` HAVING Frequency > 10
ORDER BY Frequency DESC, `Product 1`, `Product 2`;")
head(c)
#
goods <- dbGetQuery(conn,"SELECT (SELECT productName FROM Products WHERE Products.productCode = OD1.productCode) AS   `Product 1`,
(SELECT productName FROM Products WHERE Products.productCode = OD2.productCode) AS `Product 2`,
count(*) as Frequency
FROM OrderDetails AS OD1 JOIN OrderDetails AS OD2 ON OD1.orderNumber = OD2.orderNumber
WHERE OD1.productCode > OD2.productCode
GROUP BY `Product 1`, `Product 2` HAVING Frequency > 10
ORDER BY Frequency DESC, `Product 1`, `Product 2`;")
library("DBI")
library("RMySQL")
conn <- dbConnect(RMySQL::MySQL(), "richardtwatson.com", dbname="ClassicModels", user="student", password="student")
library("DBI")
library("RMySQL")
conn <- dbConnect(RMySQL::MySQL(), "richardtwatson.com", dbname="ClassicModels", user="student", password="student")
head(goods)
#preview data
head(goods)
library("DBI")
library("RMySQL")
library("ggplot2")
geom_tile(data = goods)
geom_tile(data = goods, stat = "identity",
position = "identity", ..., na.rm = FALSE, show.legend = NA,
inherit.aes = TRUE)
geom_tile(data = goods, stat = "identity",
position = "identity", na.rm = FALSE, show.legend = NA,
inherit.aes = TRUE)
ggplot(data = goods, aes(x = goods$`Product 1`, y = goods$`Product 2`)) +
geom_tile(aes(fill = goods$Frequency)) +
coord_flip() +
scale_fill_gradient(low = "#C6DBEF", high = "#08306B") +
theme_minimal()
ggplot(data = goods, aes(x = unique(goods$`Product 1`), y = unique(goods$`Product 2`))) +
geom_tile(aes(fill = goods$Frequency)) +
coord_flip() +
scale_fill_gradient(low = "#C6DBEF", high = "#08306B") +
theme_minimal()
ggplot(data = goods, aes(x = goods$`Product 1`, y = goods$`Product 2`)) +
geom_tile(aes(fill = goods$Frequency)) +
coord_flip() +
scale_fill_gradient(low = "#C6DBEF", high = "#08306B") +
theme_minimal()
library("dplyr")
library("DBI")
library("RMySQL")
library("ggplot2")
library("dplyr")
spread(goods, goods$`Product 1`, goods$Frequency, fill = NA, convert = FALSE, drop = TRUE,
sep = NULL)
library("tidyr")
spread(goods, goods$`Product 1`, goods$Frequency, fill = NA, convert = FALSE, drop = TRUE,
sep = NULL)
spread(goods, goods$`Product1`, goods$Frequency, fill = NA, convert = FALSE, drop = TRUE,
sep = NULL)
#preview data
head(goods)
spread(goods, key = goods$Product1, goods$Frequency, fill = NA, convert = FALSE, drop = TRUE,
sep = NULL)
spread(data = goods, key = goods$Product1, goods$Frequency, fill = NA, convert = FALSE, drop = TRUE,
sep = NULL)
spread(data = goods, key = Product1, value = Frequency, fill = NA, convert = FALSE, drop = TRUE,
sep = NULL)
#preview data
head(goods)
spread(data = goods, key = Product2, value = Frequency, fill = NA, convert = FALSE, drop = TRUE,
sep = NULL)
goods[is.na(goods)] <- 0
View(goods)
goods <- spread(data = goods, key = Product2, value = Frequency, fill = NA, convert = FALSE, drop = TRUE,
sep = NULL)
goods[is.na(goods)] <- 0
ggplot(data = goods, aes(x = goods$`Product 1`, y = goods$`Product 2`)) +
geom_tile(aes(fill = goods$Frequency)) +
coord_flip() +
scale_fill_gradient(low = "#C6DBEF", high = "#08306B") +
theme_minimal()
library("DBI")
library("RMySQL")
library("ggplot2")
library("tidyr")
conn <- dbConnect(RMySQL::MySQL(), "richardtwatson.com", dbname="ClassicModels", user="student", password="student")
#preview data
head(goods)
goods1 <- spread(data = goods, key = Product2, value = Frequency, fill = NA, convert = FALSE, drop = TRUE,
sep = NULL)
goods1[is.na(goods1)] <- 0
ggplot(data = goods, aes(x = goods$`Product 1`, y = goods$`Product 2`)) +
geom_tile(aes(fill = goods$Frequency)) +
coord_flip() +
scale_fill_gradient(low = "#C6DBEF", high = "#08306B") +
theme_minimal()
ggplot(data = goods, aes(x = Product1, y = Product2) +
ggplot(data = goods, aes(x = Product1, y = Product2) +
geom_tile(aes(fill = goods$Frequency)) +
coord_flip() +
scale_fill_gradient(low = "#C6DBEF", high = "#08306B") +
theme_minimal()
ggplot(data = "goods", aes(x = Product1, y = Product2) +
str(goods)
str(goods)
str(goods$Product1)
as.factor(goods$Product1)
goods$Product1<- as.factor(goods$Product1)
goods$Product2<- as.factor(goods$Product2)
ggplot(data = goods, aes(x = goods$Product2, y = goods$Product1)) +
geom_tile(aes(fill = goods$Frequency)) +
coord_flip() +
scale_fill_gradient(low = "#C6DBEF", high = "#08306B") +
theme_minimal()
View(goods)
ggplot(data = goods, aes(x = goods$Product2, y = goods$Product1)) +
geom_tile(aes(fill = goods$Frequency)) +
coord_flip() +
scale_fill_gradient(low = "light blue", high = "dark blue") +
theme_minimal()
ggplot(data = goods, aes(x = goods$Product2, y = goods$Product1)) +
geom_tile(aes(fill = goods$Frequency)) +
coord_flip() +
scale_fill_gradient(low = "light blue", high = "dark blue") +
theme_minimal() +
rescale = scale(goods$Frequency))
ggplot(data = goods, aes(x = goods$Product2, y = goods$Product1)) +
geom_tile(aes(fill = goods$Frequency)) +
coord_flip() +
scale_fill_gradient(low = "light blue", high = "dark blue") +
theme_minimal() +
rescale = scale(goods$Frequency)
ggplot(data = goods, aes(x = goods$Product2, y = goods$Product1)) +
geom_tile(aes(fill = goods$Frequency)) +
scale_y_discrete(expand=c(0,0))+
coord_flip() +
scale_fill_gradient(low = "light blue", high = "dark blue") +
theme_minimal()
ggplot(data = goods, aes(x = goods$Product2, y = goods$Product1)) +
geom_tile(aes(fill = goods$Frequency)) +
coord_flip() +
scale_fill_gradient(low = "light blue", high = "dark blue") +
theme_minimal()
goods<-goods[!(goods$Frequency>20,]
goods<-goods[!(goods$Frequency>20]
goods<-goods[!(goods$Frequency>20,]
goods<-goods[!(goods$Frequency>20),]
ggplot(data = goods, aes(x = goods$Product2, y = goods$Product1)) +
geom_tile(aes(fill = goods$Frequency)) +
coord_flip() +
scale_fill_gradient(low = "light blue", high = "dark blue") +
theme_minimal()
goods<-goods[!(goods$Frequency>30),]
coord_flip() +
goods<-goods[!(goods$Frequency>30),]
ggplot(data = goods, aes(x = goods$Product2, y = goods$Product1)) +
geom_tile(aes(fill = goods$Frequency)) +
coord_flip() +
scale_fill_gradient(low = "light blue", high = "dark blue") +
theme_minimal()
goods<-goods[!(goods$Frequency<30),]
library("DBI")
library("RMySQL")
library("ggplot2")
library("tidyr")
conn <- dbConnect(RMySQL::MySQL(), "richardtwatson.com", dbname="ClassicModels", user="student", password="student")
#preview data
head(goods)
str(goods$Product1)
goods$Product1<- as.factor(goods$Product1)
goods$Product2<- as.factor(goods$Product2)
goods<-goods[!(goods$Frequency<30),]
ggplot(data = goods, aes(x = goods$Product2, y = goods$Product1)) +
geom_tile(aes(fill = goods$Frequency)) +
coord_flip() +
scale_fill_gradient(low = "light blue", high = "dark blue") +
theme_minimal()
goods<-goods[(goods$Frequency>=30),]
ggplot(data = goods, aes(x = goods$Product2, y = goods$Product1)) +
geom_tile(aes(fill = goods$Frequency)) +
coord_flip() +
scale_fill_gradient(low = "light blue", high = "dark blue") +
theme_minimal()
library("DBI")
library("RMySQL")
library("ggplot2")
library("tidyr")
conn <- dbConnect(RMySQL::MySQL(), "richardtwatson.com", dbname="ClassicModels", user="student", password="student")
#preview data
head(goods)
str(goods$Product1)
goods$Product1<- as.factor(goods$Product1)
goods$Product2<- as.factor(goods$Product2)
goods<-goods[(goods$Frequency>=30),]
ggplot(data = goods, aes(x = goods$Product2, y = goods$Product1)) +
geom_tile(aes(fill = goods$Frequency)) +
coord_flip() +
scale_fill_gradient(low = "light blue", high = "dark blue") +
theme_minimal()
goods[(goods$Frequency>=25),]
str(goods$Product1)
goods$Product1<- as.factor(goods$Product1)
goods$Product2<- as.factor(goods$Product2)
goods[(goods$Frequency>=25),]
goods1<- goods[(goods$Frequency>=25),]
View(goods1)
ggplot(data = goods1, aes(x = goods1$Product2, y = goods1$Product1)) +
geom_tile(aes(fill = goods1$Frequency)) +
coord_flip() +
scale_fill_gradient(low = "light blue", high = "dark blue") +
theme_minimal()
ggplot(data = goods1, aes(x = goods1$Product2, y = goods1$Product1)) +
geom_tile(aes(fill = goods1$Frequency)) +
coord_flip() +
scale_fill_gradient(low = "light blue", high = "dark blue") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
ggplot(data = goods1, aes(x = goods1$Product2, y = goods1$Product1)) +
geom_tile(aes(fill = goods1$Frequency)) +
coord_flip() +
scale_fill_gradient(low = "light blue", high = "dark blue") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 60, hjust = 3))
ggplot(data = goods1, aes(x = goods1$Product2, y = goods1$Product1)) +
geom_tile(aes(fill = goods1$Frequency)) +
coord_flip() +
scale_fill_gradient(low = "light blue", high = "dark blue") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
goods1<- goods[(goods$Frequency>25),]
ggplot(data = goods1, aes(x = goods1$Product2, y = goods1$Product1)) +
geom_tile(aes(fill = goods1$Frequency)) +
coord_flip() +
scale_fill_gradient(low = "light blue", high = "dark blue") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
ggplot(data = goods1, aes(x = goods1$Product2, y = goods1$Product1)) +
xlab = "Product 2" + ylab = "Product 1"
ggplot(data = goods1, aes(x = goods1$Product2, y = goods1$Product1)) +
xlab ("Product 2")+ ylab("Product 1")
geom_tile(aes(fill = goods1$Frequency)) +
coord_flip() +
scale_fill_gradient(low = "light blue", high = "dark blue") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
ggplot(data = goods1, aes(x = goods1$Product2, y = goods1$Product1)) +
xlab ("Product 2")+ ylab("Product 1") +
geom_tile(aes(fill = goods1$Frequency)) +
coord_flip() +
scale_fill_gradient(low = "light blue", high = "dark blue") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
ggplot(data = goods1, aes(x = goods1$Product2, y = goods1$Product1)) +
xlab ("Product 2")+ ylab("Product 1") +
geom_tile(aes(fill = goods1$Frequency)) +
coord_flip() +
scale_fill_gradient(low = "light blue", high = "dark blue", name = "Frequency") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
library("DBI")
library("RMySQL")
library("ggplot2")
library("tidyr")
conn <- dbConnect(RMySQL::MySQL(), "richardtwatson.com", dbname="ClassicModels", user="student", password="student")
#preview data
head(goods)
#check data types
str(goods$Product1)
#Make factor
goods$Product1<- as.factor(goods$Product1)
goods$Product2<- as.factor(goods$Product2)
#limit frequency to greater than 25
goods1<- goods[(goods$Frequency>25),]
ggplot(data = goods1, aes(x = goods1$Product2, y = goods1$Product1)) +
xlab ("Product 2")+ ylab("Product 1") +
geom_tile(aes(fill = goods1$Frequency)) +
coord_flip() +
scale_fill_gradient(low = "light blue", high = "dark blue", name = "Frequency") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
library("DBI")
library("RMySQL")
library("ggplot2")
library("tidyr")
conn <- dbConnect(RMySQL::MySQL(), "richardtwatson.com", dbname="ClassicModels", user="student", password="student")
#preview data
head(goods)
#check data types
str(goods$Product1)
#Make factor
goods$Product1<- as.factor(goods$Product1)
goods$Product2<- as.factor(goods$Product2)
#limit frequency to greater than 25
goods1<- goods[(goods$Frequency>25),]
ggplot(data = goods1, aes(x = goods1$Product2, y = goods1$Product1)) +
xlab ("Product 2")+ ylab("Product 1") +
geom_tile(aes(fill = goods1$Frequency)) +
coord_flip() +
scale_fill_gradient(low = "light blue", high = "dark blue", name = "Frequency") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
#preview data
head(goods)
#check data types
str(goods$Product1)
ggplot(data = goods1, aes(x = goods1$Product2, y = goods1$Product1)) +
xlab ("Product 2")+ ylab("Product 1") +
geom_tile(aes(fill = goods1$Frequency)) +
coord_flip() +
scale_fill_gradient(low = "light blue", high = "dark blue", name = "Frequency") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
#limit frequency to greater than 25
goods1<- goods[(goods$Frequency>25),]
ggplot(data = goods1, aes(x = goods1$Product2, y = goods1$Product1)) +
xlab ("Product 2")+ ylab("Product 1") +
geom_tile(aes(fill = goods1$Frequency)) +
coord_flip() +
scale_fill_gradient(low = "light blue", high = "dark blue", name = "Frequency") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
ggplot(data = goods, aes(x = Product2, y = Product1)) +
xlab ("Product 2")+ ylab("Product 1") +
geom_tile(aes(fill = Frequency)) +
coord_flip() +
scale_fill_gradient(low = "light blue", high = "dark blue", name = "Frequency") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
library("DBI")
library("RMySQL")
library("ggplot2")
library("tidyr")
ggplot(data = goods, aes(x = Product2, y = Product1)) +
xlab ("Product 2")+ ylab("Product 1") +
geom_tile(aes(fill = Frequency)) +
coord_flip() +
scale_fill_gradient(low = "light blue", high = "dark blue", name = "Frequency") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
ggplot(data = goods, aes(x = Product2, y = Product1)) +
xlab ("Product 2")+ ylab("Product 1") +
geom_tile(aes(fill = Frequency)) +
coord_flip() +
scale_fill_gradient(low = "light blue", high = "dark blue", name = "Frequency") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
library(ggplot2)
goods %>%
Frequency > 25
library("DBI")
library("RMySQL")
library("ggplot2")
library("tidyr")
conn <- dbConnect(RMySQL::MySQL(), "richardtwatson.com", dbname="ClassicModels", user="student", password="student")
#preview data
head(goods)
library(ggplot2)
ggplot(data = goods, aes(x = Product2, y = Product1)) +
xlab ("Product 2")+ ylab("Product 1") +
geom_tile(aes(fill = Frequency)) +
coord_flip() +
scale_fill_gradient(low = "light blue", high = "dark blue", name = "Frequency") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
goods %>%
Frequency > 25
freq <- 25
goods %>%
filter(Frequency > freq)
goods %>%
filter(goods$Frequency > freq)
goods %>%
filter(goods, Frequency > freq)
goods %>%
filter(goods, Frequency > 25)
filter(goods, Frequency > 25)
Frequency
goods %>%
filter(goods, Frequency > 25)
goods %>%
filter(goods, goods$Frequency > 25)
goods %>%
filter(goods, Frequency > 25)
goods %>%
filter(goods, Frequency > 25)
library("DBI")
library("RMySQL")
library("ggplot2")
library("tidyr")
conn <- dbConnect(RMySQL::MySQL(), "richardtwatson.com", dbname="ClassicModels", user="student", password="student")
#preview data
head(goods)
library(ggplot2)
ggplot(data = goods, aes(x = Product2, y = Product1)) +
xlab ("Product 2")+ ylab("Product 1") +
geom_tile(aes(fill = Frequency)) +
coord_flip() +
scale_fill_gradient(low = "light blue", high = "dark blue", name = "Frequency") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
freq <- 25
goods %>%
filter(goods, Frequency > 25)
```{r}
goods %>%
filter(goods, Frequency > 25)
goods %>%
filter(goods, Frequency > 25)
goods %>%
filter(goods, Frequency > 25)
library("dplyr")
goods %>%
filter(goods, Frequency > 25)
goods %>%
filter(goods, Frequency > 25)
goods %>%
filter(goods, Frequency > 25)
library("dplyr")
goods %>%
filter(goods, Frequency > 25)
goods %>%
filter(goods, Frequency > 25)
